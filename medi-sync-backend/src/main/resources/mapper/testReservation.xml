<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mediSync.project.mapper.TestReservationMapper">
   <!-- 검사 예약 조회 -->
    <select id="selectTestReservation" resultType="com.mediSync.project.vo.TestReservation">
        SELECT
        r.reservation_id AS reservationId,
        r.schedule_id AS scheduleId,
        r.patient_id AS patientId,
        p.name AS patientName,
        ts.test_code AS testCode,
        ts.test_name AS testName,
        ts.test_date AS testDate,
        ts.test_time AS testTime,
        r.status AS status,
        r.reserved_at AS reservedAt
        FROM test_reservation r
        LEFT JOIN patient p ON r.patient_id = p.patient_id
        LEFT JOIN test_schedule ts ON r.schedule_id = ts.schedule_id
    </select>

    <select id="selectById" parameterType="long" resultType="testReservation" >
        SELECT * FROM test_reservation WHERE reservation_id = #{reservationId}
    </select>

    <!-- 등록 -->
    <insert id="insertTestReservation" parameterType="testReservation">
        INSERT INTO test_reservation (schedule_id, patient_id, record_id, doctor_id, status)
        VALUES (#{scheduleId}, #{patientId}, #{recordId}, #{doctorId}, #{status})
    </insert>

    <!-- 수정 -->
    <update id="updateTestReservation" parameterType="testReservation">
        UPDATE test_reservation
        SET
        status = #{status},
        record_id = #{recordId},
        doctor_id = #{doctorId},
        test_date = #{testDate},
        test_time = #{testTime}
        WHERE reservation_id = #{reservationId}
    </update>

    <!-- 삭제 -->
    <delete id="deleteTestReservation" parameterType="long">
        DELETE FROM test_reservation WHERE reservation_id = #{reservationId}
    </delete>
    <!-- 검사별 조회 -->
    <select id="selectByGroup" resultType="testReservation">
        SELECT
        r.reservation_id AS reservationId,
        ts.schedule_id AS scheduleId,
        ts.test_code AS testCode,
        ts.test_name AS testName,
        ts.test_date AS testDate,
        ts.test_time AS testTime,
        r.status AS status,
        p.name AS patientName
        FROM test_reservation r
        JOIN test_schedule ts ON r.schedule_id = ts.schedule_id
        JOIN test_fee f ON ts.test_code = f.test_code
        JOIN patient p ON r.patient_id = p.patient_id
        WHERE UPPER(TRIM(f.test_group)) = UPPER(TRIM(#{group}))
        ORDER BY ts.test_date DESC, ts.test_time ASC
    </select>
<!--  검사 관리 검색 기능  -->
    <select id="searchByGroupAndKeyword" resultType="testReservation">
        SELECT
        r.reservation_id AS reservationId,
        ts.schedule_id AS scheduleId,
        ts.test_code AS testCode,
        ts.test_name AS testName,
        ts.test_date AS testDate,
        ts.test_time AS testTime,
        r.status AS status,
        p.name AS patientName
        FROM test_reservation r
        JOIN test_schedule ts ON r.schedule_id = ts.schedule_id
        JOIN test_fee f ON ts.test_code = f.test_code
        JOIN patient p ON r.patient_id = p.patient_id
        WHERE UPPER(TRIM(f.test_group)) = UPPER(TRIM(#{group}))
        <if test="keyword != null and keyword != ''">
            AND (p.name LIKE CONCAT('%', #{keyword}, '%')
            OR ts.test_name LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="startDate != null and startDate != ''">
            AND ts.test_date &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND ts.test_date &lt;= #{endDate}
        </if>
        ORDER BY ts.test_date DESC, ts.test_time ASC
    </select>

    <update id="updateStatus" parameterType="map">
        UPDATE test_reservation
        SET status = #{status},
        updated_at = NOW()
        WHERE reservation_id = #{reservationId}
    </update>
</mapper>
